package com.muurr.tfcplusborscht;

import com.dunk.tfc.CommonProxy;
import com.dunk.tfc.Core.FluidBaseTFC;
import com.dunk.tfc.api.TFCFluids;
import com.dunk.tfc.api.TFCItems;

import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraftforge.fluids.Fluid;
import net.minecraftforge.fluids.FluidContainerRegistry;
import net.minecraftforge.fluids.FluidRegistry;
import net.minecraftforge.fluids.FluidStack;

public class Proxy {
	public static final Fluid BORSCHT = new FluidBaseTFC("borscht").setBaseColor(0x8c2c24);
	public static final Fluid KVASS = new FluidBaseTFC("kvass").setBaseColor(0xc9660c);
	public static final Fluid CHICKENSOUP = new FluidBaseTFC("chickensoup").setBaseColor(0xc9660c);
	public void registerFluids()
	{
		FluidRegistry.registerFluid(BORSCHT);
		FluidRegistry.registerFluid(KVASS);
		FluidRegistry.registerFluid(CHICKENSOUP);
	}
	public void setupFluids()
	{
		setupFluidDrinks(BORSCHT, 1000, ItemSetup.borscht, TFCItems.glassBottle);
		setupFluidDrinks(BORSCHT, 1000, ItemSetup.woodenBucketBorscht, TFCItems.woodenBucketEmpty);
		setupFluidDrinks(BORSCHT, 1000, ItemSetup.clayBucketBorscht, TFCItems.clayBucketEmpty);
		
		setupFluidDrinks(KVASS, 1000, ItemSetup.kvass, TFCItems.glassBottle);
		setupFluidDrinks(KVASS, 1000, ItemSetup.woodenBucketKvass, TFCItems.woodenBucketEmpty);
		setupFluidDrinks(KVASS, 1000, ItemSetup.clayBucketKvass, TFCItems.clayBucketEmpty);
		
		setupFluidDrinks(CHICKENSOUP, 1000, ItemSetup.chickensoup, TFCItems.glassBottle);
		setupFluidDrinks(CHICKENSOUP, 1000, ItemSetup.woodenBucketChickenSoup, TFCItems.woodenBucketEmpty);
		setupFluidDrinks(CHICKENSOUP, 1000, ItemSetup.clayBucketChickenSoup, TFCItems.clayBucketEmpty);
	}
	
	private void registerFluidContainerHelper(Fluid fluid, int baseVolume, ItemStack baseItem, ItemStack baseContainer)
	{
		FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume),baseItem, baseContainer);
		if(TFCItems.potteryDrinks != null && TFCItems.potteryDrinks.containsKey(baseItem.getUnlocalizedName()))
		{
			if(baseContainer != null && baseItem != null && baseContainer.getItem() == baseItem.getItem())
			{
				Item potteryVersion = TFCItems.potteryDrinks.get(baseItem.getUnlocalizedName());
				FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume), new ItemStack(potteryVersion, 1, baseItem.getItemDamage()), new ItemStack(potteryVersion,1, baseContainer.getItemDamage()));
			}
			else
			{
				FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume), new ItemStack(TFCItems.potteryDrinks.get(baseItem.getUnlocalizedName()), 1, baseItem.getItemDamage()), new ItemStack(TFCItems.potteryJug,1, 1));
			}
			
		}
	}

	protected void setupFluidDrinks(Fluid fluid, int mB, Item drink, Item container)
	{
		int num = mB/50;
		registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,num-1), new ItemStack(container));
		for(int i = 0; i < num-1; i++)
		{
			registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,i),  new ItemStack(drink,1,i+1));
		}
	}
	
	protected void setupFluidDrinks(Fluid fluid, int mB, Item drink, int minDrinkDamage, Item container, int containerDamage)
	{
		int num = mB/50;
		registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,minDrinkDamage + num-1), new ItemStack(container, 1, containerDamage));
		for(int i = 0; i < num-1; i++)
		{
			registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,minDrinkDamage + i),  new ItemStack(drink,1,minDrinkDamage + i+1));
		}
	}
}
