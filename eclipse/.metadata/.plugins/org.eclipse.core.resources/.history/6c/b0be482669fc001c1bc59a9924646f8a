package com.muurr.tfcplusborscht;

import com.dunk.tfc.Core.FluidBaseTFC;
import com.dunk.tfc.Core.TFCTabs;
import com.dunk.tfc.Food.ItemFoodTFC;
import com.dunk.tfc.Items.ItemDrink;
import com.dunk.tfc.Items.Tools.ItemCustomBucketMilk;
import com.dunk.tfc.api.TFCFluids;
import com.dunk.tfc.api.TFCItems;
import com.dunk.tfc.api.Crafting.BarrelFireRecipe;
import com.dunk.tfc.api.Crafting.BarrelManager;
import com.dunk.tfc.api.Enums.EnumFoodGroup;

import com.muurr.tfcplusborscht.ItemsList;

import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraftforge.fluids.Fluid;
import net.minecraftforge.fluids.FluidContainerRegistry;
import net.minecraftforge.fluids.FluidRegistry;
import net.minecraftforge.fluids.FluidStack;

public class ItemSetup extends TFCItems{
	
	//Bouillons
	public static Item chickenbouillon;
	public static final Fluid CHICKENBOUILLON = new FluidBaseTFC("chickenbouillon").setBaseColor(0xe1e9e1);
	
	public static Item meatbouillon;
	public static final Fluid MEATBOUILLON = new FluidBaseTFC("meatbouillon").setBaseColor(0xe1e9e1);
	
	public static Item fishbouillon;
	public static final Fluid FISHBOUILLON = new FluidBaseTFC("fishbouillon").setBaseColor(0xe1e9e1);
	
	public static Item mushroombouillon;
	public static final Fluid MUSHROOMBOUILLON = new FluidBaseTFC("mushroombouillon").setBaseColor(0xe1e9e1);
	
	public static Item bonebouillon;
	public static final Fluid BONEBOUILLON = new FluidBaseTFC("bonebouillon").setBaseColor(0xe1e9e1);
		
	//Soups
	public static Item chickensoup;
	public static final Fluid CHICKENSOUP = new FluidBaseTFC("chickensoup").setBaseColor(0xe6b10e);
	
	public static Item potatosoup;
	public static final Fluid POTATOSOUP = new FluidBaseTFC("potatosoup").setBaseColor(0xe1e9e1);
	
	public static Item borscht;
	public static final Fluid BORSCHT = new FluidBaseTFC("borscht").setBaseColor(0x8c2c24);
	
	public static Item fishsoup;
	public static final Fluid FISHSOUP = new FluidBaseTFC("fishsoup").setBaseColor(0xe1e9e1);
	
	public static Item mushroomsoup;
	public static final Fluid MUSHROOMSOUP = new FluidBaseTFC("mushroomsoup").setBaseColor(0xe1e9e1);
	
	public static Item peasantsoup;
	public static final Fluid PEASANTSOUP = new FluidBaseTFC("peasantsoup").setBaseColor(0xe1e9e1);
	
	public static Item okroshka;
	public static final Fluid OKROSHKA = new FluidBaseTFC("okroshka").setBaseColor(0xe1e9e1);
	
	public static Item cheesesoup;
	public static final Fluid CHEESESOUP = new FluidBaseTFC("cheesesoup").setBaseColor(0xe1e9e1);
	
	public static Item milksoup;
	public static final Fluid MILKSOUP = new FluidBaseTFC("milksoup").setBaseColor(0xe1e9e1);

	public static void setup()
	{
		//Bouillons
		chickenbouillon = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.750f).setWaterRestoreRatio(1f).setUnlocalizedName("Chicken Bouillon").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(chickenbouillon, chickenbouillon.getUnlocalizedName());
		meatbouillon = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.750f).setWaterRestoreRatio(1f).setUnlocalizedName("Meat Boillon").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(meatbouillon, meatbouillon.getUnlocalizedName());
		fishbouillon  = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.750f).setWaterRestoreRatio(1f).setUnlocalizedName("Fish Boillon").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(fishbouillon, fishbouillon.getUnlocalizedName());
		mushroombouillon = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Mushroom Bouillon").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(mushroombouillon, mushroombouillon.getUnlocalizedName());
		bonebouillon = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.250f).setWaterRestoreRatio(1f).setUnlocalizedName("Bone Bouillon").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(bonebouillon, bonebouillon.getUnlocalizedName());
		
		//Soups
		chickensoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Chicken Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(chickensoup, chickensoup.getUnlocalizedName());
		potatosoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Vegetable).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Potato Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(potatosoup, potatosoup.getUnlocalizedName());
		borscht = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Borscht").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(borscht, borscht.getUnlocalizedName());
		fishsoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Fish Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(fishsoup, fishsoup.getUnlocalizedName());
		mushroomsoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Protein).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Mushroom Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(mushroomsoup, mushroomsoup.getUnlocalizedName());
		peasantsoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Vegetable).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Peasant Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(peasantsoup, peasantsoup.getUnlocalizedName());
		okroshka = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Dairy).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Okroshka").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(okroshka, okroshka.getUnlocalizedName());
		cheesesoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Dairy).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Cheese Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(cheesesoup, cheesesoup.getUnlocalizedName());
		milksoup = new ItemDrink(1000).setFoodGroup(EnumFoodGroup.Dairy).setCalories(0.500f).setWaterRestoreRatio(1f).setUnlocalizedName("Milk Soup").setCreativeTab(TFCTabs.TFC_FOODS);
		GameRegistry.registerItem(milksoup, milksoup.getUnlocalizedName());
	}
	public static void setupdrinks()
	{
		drinks.add((ItemDrink) chickenbouillon);
		BarrelManager.getInstance().addRecipe(new BarrelFireRecipe(ItemFoodTFC.createTag(new ItemStack(TFCItems.cabbage), 60), new FluidStack(TFCFluids.FRESHWATER, 1000), null, new FluidStack(BORSCHT, 1500), 0, 250)
				.setFireTicksScale(true).setSealedRecipe(false).setRemovesLiquid(false));
	}
	
	public void registerFluids()
	{
		//Bouillons
		FluidRegistry.registerFluid(CHICKENBOUILLON);
		setupFluidDrinks(CHICKENBOUILLON, 1000, chickenbouillon, TFCItems.glassBottle);
		FluidRegistry.registerFluid(MEATBOUILLON);
		setupFluidDrinks(MEATBOUILLON, 1000, meatbouillon, TFCItems.glassBottle);
		FluidRegistry.registerFluid(FISHBOUILLON);
		setupFluidDrinks(FISHBOUILLON, 1000, fishbouillon, TFCItems.glassBottle);
		FluidRegistry.registerFluid(MUSHROOMBOUILLON);
		setupFluidDrinks(MUSHROOMBOUILLON, 1000, mushroombouillon, TFCItems.glassBottle);
		FluidRegistry.registerFluid(BONEBOUILLON);
		setupFluidDrinks(BONEBOUILLON, 1000, bonebouillon, TFCItems.glassBottle);

		//Soups
		FluidRegistry.registerFluid(CHICKENSOUP);
		setupFluidDrinks(CHICKENSOUP, 1000, chickenbouillon, TFCItems.glassBottle);
		FluidRegistry.registerFluid(POTATOSOUP);
		setupFluidDrinks(POTATOSOUP, 1000, potatosoup, TFCItems.glassBottle);
		FluidRegistry.registerFluid(BORSCHT);
		setupFluidDrinks(BORSCHT, 1000, ItemSetup.borscht, TFCItems.glassBottle);
		FluidRegistry.registerFluid(FISHSOUP);
		setupFluidDrinks(FISHSOUP, 1000, fishsoup, TFCItems.glassBottle);
		FluidRegistry.registerFluid(MUSHROOMSOUP);
		setupFluidDrinks(MUSHROOMSOUP, 1000, mushroomsoup, TFCItems.glassBottle);
		FluidRegistry.registerFluid(PEASANTSOUP);
		setupFluidDrinks(PEASANTSOUP, 1000, peasantsoup, TFCItems.glassBottle);
		FluidRegistry.registerFluid(OKROSHKA);
		setupFluidDrinks(OKROSHKA, 1000, okroshka, TFCItems.glassBottle);
		FluidRegistry.registerFluid(CHEESESOUP);
		setupFluidDrinks(CHEESESOUP, 1000, cheesesoup, TFCItems.glassBottle);
		FluidRegistry.registerFluid(MILKSOUP);
		setupFluidDrinks(MILKSOUP, 1000, milksoup, TFCItems.glassBottle);
	}
	
	private void registerFluidContainerHelper(Fluid fluid, int baseVolume, ItemStack baseItem, ItemStack baseContainer)
	{
		FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume),baseItem, baseContainer);
		if(TFCItems.potteryDrinks != null && TFCItems.potteryDrinks.containsKey(baseItem.getUnlocalizedName()))
		{
			if(baseContainer != null && baseItem != null && baseContainer.getItem() == baseItem.getItem())
			{
				Item potteryVersion = TFCItems.potteryDrinks.get(baseItem.getUnlocalizedName());
				FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume), new ItemStack(potteryVersion, 1, baseItem.getItemDamage()), new ItemStack(potteryVersion,1, baseContainer.getItemDamage()));
			}
			else
			{
				FluidContainerRegistry.registerFluidContainer(new FluidStack(fluid, baseVolume), new ItemStack(TFCItems.potteryDrinks.get(baseItem.getUnlocalizedName()), 1, baseItem.getItemDamage()), new ItemStack(TFCItems.potteryJug,1, 1));
			}
			
		}
	}

	protected void setupFluidDrinks(Fluid fluid, int mB, Item drink, Item container)
	{
		int num = mB/50;
		registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,num-1), new ItemStack(container));
		for(int i = 0; i < num-1; i++)
		{
			registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,i),  new ItemStack(drink,1,i+1));
		}
	}
	
	protected void setupFluidDrinks(Fluid fluid, int mB, Item drink, int minDrinkDamage, Item container, int containerDamage)
	{
		int num = mB/50;
		registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,minDrinkDamage + num-1), new ItemStack(container, 1, containerDamage));
		for(int i = 0; i < num-1; i++)
		{
			registerFluidContainerHelper(fluid, /*mB - (i*50)*/50, new ItemStack(drink,1,minDrinkDamage + i),  new ItemStack(drink,1,minDrinkDamage + i+1));
		}
	}
}
